{"version":3,"sources":["src/app.ts","src/contact-detail.ts","src/contact-list.ts","src/environment.ts","src/job-api.ts","src/job-detail.ts","src/job-test.ts","src/main.ts","src/messages.ts","src/no-selection.ts","src/utility.ts","src/web-api.ts","src/resources/index.ts","src/resources/elements/loading-indicator.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { Router, RouterConfiguration } from 'aurelia-router';\nimport { inject } from 'aurelia-framework';\nimport { WebAPI } from './web-api';\n\n@inject(WebAPI)\nexport class App {\n  router: Router;\n\n  constructor(public api: WebAPI) {}\n\n  configureRouter(config: RouterConfiguration, router: Router) {\n    config.title = 'Contacts';\n    config.map([\n      { route: '', moduleId: 'no-selection', title: 'Select' },\n      { route: 'contacts/:id', moduleId: 'contact-detail', name: 'contacts' },\n      { route: 'details', moduleId: 'job-detail', name: 'details' },\n      { route: 'jobtest', moduleId: 'job-test', name: 'jobtest' }\n    ]);\n\n    this.router = router;\n  }\n}","import { inject } from 'aurelia-framework';\r\nimport { ValidationRules, ValidationController } from 'aurelia-validation';\r\n//import { Validator, ValidationRules } from 'aurelia-validation';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { WebAPI } from './web-api';\r\nimport { ContactUpdated, ContactViewed } from './messages';\r\nimport { areEqual } from './utility';\r\n\r\n\r\ninterface Contact {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n}\r\n\r\n@inject(WebAPI, EventAggregator, ValidationController)\r\nexport class ContactDetail {\r\n    routeConfig;\r\n    contact: Contact;\r\n    originalContact: Contact;\r\n    controller;\r\n\r\n    constructor(private api: WebAPI, private ea: EventAggregator, controller) {\r\n        this.controller = controller;\r\n\r\n        //// this.validation = ValidationRules\r\n        // ValidationRules\r\n        //     .ensure((j: Contact) => j.firstName)\r\n        //     .required()\r\n        //     .minLength(3)\r\n        //     .maxLength(100)\r\n        //     // .ensure('contact.phoneNumber')\r\n        //     // .required()\r\n        //     .on(this.contact);\r\n    }\r\n\r\n    activate(params, routeConfig) {\r\n        this.routeConfig = routeConfig;\r\n\r\n        return this.api.getContactDetails(params.id).then(contact => {\r\n            this.contact = <Contact>contact;\r\n            // this.controller.validate();\r\n            this.routeConfig.navModel.setTitle(this.contact.firstName);\r\n            this.originalContact = JSON.parse(JSON.stringify(this.contact));\r\n            this.ea.publish(new ContactViewed(this.contact));\r\n        });\r\n    }\r\n\r\n    get canSave() {\r\n        return this.contact.firstName && this.contact.lastName && !this.api.isRequesting;\r\n    }\r\n\r\n    save() {\r\n        // this.controller.validate().then(() => {\r\n            this.api.saveContact(this.contact).then(contact => {\r\n                this.contact = <Contact>contact;\r\n                this.routeConfig.navModel.setTitle(this.contact.firstName);\r\n                this.originalContact = JSON.parse(JSON.stringify(this.contact));\r\n                this.ea.publish(new ContactUpdated(this.contact));\r\n            });\r\n        // });\r\n    }\r\n\r\n    canDeactivate() {\r\n        if (!areEqual(this.originalContact, this.contact)) {\r\n            let result = confirm('You have unsaved changes. Are you sure you wish to leave?');\r\n\r\n            if (!result) {\r\n                this.ea.publish(new ContactViewed(this.contact));\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}","import { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { WebAPI } from './web-api';\r\nimport { inject } from 'aurelia-framework';\r\nimport { ContactUpdated, ContactViewed } from './messages';\r\n\r\n@inject(WebAPI, EventAggregator)\r\nexport class ContactList {\r\n    contacts;\r\n    selectedId = 0;\r\n\r\n    constructor(private api: WebAPI, ea: EventAggregator) {\r\n        ea.subscribe(ContactViewed, msg => this.select(msg.contact));\r\n        ea.subscribe(ContactUpdated, msg => {\r\n            let id = msg.contact.id;\r\n            let found = this.contacts.find(x => x.id == id);\r\n            Object.assign(found, msg.contact);\r\n        });\r\n    }\r\n\r\n    created() {\r\n        this.api.getContactList().then(contacts => this.contacts = contacts);\r\n    }\r\n\r\n    select(contact) {\r\n        this.selectedId = contact.id;\r\n        return true;\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","let latency = 100;\r\nlet id = 0;\r\n\r\n\r\nlet jobs = [\r\n    {\r\n        id: getId(),\r\n        jobTitle: 'Consultant',\r\n        jobDescription: 'Sharepoint development works...',\r\n        jobSkills: [\".NET\", \"C#\"], \r\n        jobType: 'Full Time',\r\n        fullName: 'Ruwan Kumara',\r\n        address: '',\r\n        dateOfBirth: '',\r\n        email: 'ruwan@inklings.com',\r\n        state: \"\", \r\n        city: \"Alexandria\",                 \r\n        phoneNumber: '867-5309'\r\n    },\r\n    {\r\n        id: getId(),\r\n        jobTitle: 'Consultant',\r\n        jobDescription: 'Client side development works...',\r\n        jobSkills: [\".NET\", \"Javascript\", \"Java\"], \r\n        jobType: 'Full Time',\r\n        fullName: 'Sananka de Silva',\r\n        address: '',\r\n        dateOfBirth: '',\r\n        email: 'sananka@inklings.com',\r\n        city: \"Alexandria\", \r\n        state: \"\", \r\n        phoneNumber: '867-5310'\r\n    },\r\n    {\r\n        id: getId(),\r\n        jobTitle: 'Senior Consultant',\r\n        jobDescription: 'Tead lead works...',\r\n        jobSkills: [\".NET\", \"Sharepoint\"], \r\n        jobType: 'Full Time',\r\n        fullName: 'Kanishka Jayawardena',\r\n        address: '',\r\n        dateOfBirth: '',\r\n        email: 'kanishka@inklings.com',\r\n        city: \"Alexandria\", \r\n        state: \"\", \r\n        phoneNumber: '867-5311'\r\n    }\r\n];\r\n\r\nlet jobTypes = [\r\n    \"Full Time\",\r\n    \"Contract\",\r\n    \"Contract-To-Hire\"\r\n];\r\n\r\nlet jobSkills = [\r\n    \".NET\",\r\n    \"C#\",\r\n    \"Sharepoint\",\r\n    \"JavaScript\",\r\n    \"HTML\",\r\n    \"SQL Server\",  \r\n    \"Microsoft Azure\",\r\n    \"XAML\",\r\n    \"Java\",\r\n    \"NodeJS\"  \r\n];\r\n\r\nlet states = [\r\n    {\r\n        \"name\": \"Alabama\",        \r\n    },\r\n    {\r\n        \"name\": \"Alaska\",        \r\n    },\r\n    {\r\n        \"name\": \"Arizona\",        \r\n    },\r\n    \r\n    {\r\n        \"name\": \"California\",       \r\n    },\r\n    {\r\n        \"name\": \"Colorado\",       \r\n    }    \r\n];\r\n\r\n\r\nfunction getId() {\r\n    return ++id;\r\n}\r\n\r\nexport class JobAPI {\r\n    isRequesting = false;\r\n\r\n    getJobList() {\r\n        this.isRequesting = true;\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                let results = jobs.map(x => {\r\n                    return {\r\n                        id: x.id,\r\n                        jobTitle: x.jobTitle,\r\n                        jobDescription: x.jobDescription,\r\n                        jobSkills: x.jobSkills, \r\n                        jobType: x.jobType,\r\n                        fullName: x.fullName,\r\n                        address: x.address,\r\n                        dateOfBirth: x.dateOfBirth,\r\n                        email: x.email,\r\n                        city: x.city, \r\n                        state: x.state,\r\n                        phoneNumber: x.phoneNumber\r\n                    }\r\n                });\r\n                resolve(results);\r\n                this.isRequesting = false;\r\n            }, latency);\r\n        });\r\n    }\r\n\r\n    getJobDetails(id) {\r\n        this.isRequesting = true;\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                let found = jobs.filter(x => x.id == id)[0];\r\n                resolve(JSON.parse(JSON.stringify(found)));\r\n                this.isRequesting = false;\r\n            }, latency);\r\n        });\r\n    }\r\n\r\n    saveJob(job) {\r\n        this.isRequesting = true;\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                let instance = JSON.parse(JSON.stringify(job));\r\n                let found = jobs.filter(x => x.id == job.id)[0];\r\n\r\n                if (found) {\r\n                    let index = jobs.indexOf(found);\r\n                    job[index] = instance;\r\n                } else {\r\n                    instance.id = getId();\r\n                    job.push(instance);\r\n                }\r\n\r\n                this.isRequesting = false;\r\n                resolve(instance);\r\n            }, latency);\r\n        });\r\n    }\r\n\r\n    getJobTypes() {\r\n        this.isRequesting = true;\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                let results = jobTypes.map(x => {\r\n                    return x;\r\n                });\r\n                resolve(results);\r\n                this.isRequesting = false;\r\n            }, latency);\r\n        });\r\n    }\r\n\r\n    getJobSkills() {\r\n        this.isRequesting = true;\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                let results = jobSkills.map(x => {\r\n                    return x;\r\n                });\r\n                resolve(results);\r\n                this.isRequesting = false;\r\n            }, latency);\r\n        });\r\n    }\r\n\r\n    getStates() {\r\n        this.isRequesting = true;\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                let results = states.map(x => {\r\n                    return {\r\n                        id: x.name\r\n                    }\r\n                });\r\n                resolve(results);\r\n                this.isRequesting = false;\r\n            }, latency);\r\n        });\r\n    }\r\n\r\n}","import {\r\n    ValidationControllerFactory,\r\n    ValidationController,\r\n    ValidationRules\r\n} from 'aurelia-validation';\r\nimport { inject } from 'aurelia-dependency-injection';\r\n\r\n@inject(ValidationControllerFactory)\r\nexport class JobDetail {\r\n    public firstName = '';\r\n    public email = '';\r\n    public controller = null;\r\n\r\n    constructor(public controllerFactory: ValidationControllerFactory) {\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n    }\r\n\r\n    submit() {\r\n        this.controller.validate();\r\n    }\r\n\r\n}\r\n\r\nValidationRules\r\n    .ensure('firstName').required()\r\n    .ensure('email').required().email()\r\n    .on(JobDetail); ","import {\r\n    ValidationControllerFactory,\r\n    ValidationController,\r\n    ValidationRules,\r\n    validateTrigger\r\n} from 'aurelia-validation';\r\nimport { inject } from 'aurelia-dependency-injection';\r\n\r\nexport interface IJob {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\n@inject(ValidationControllerFactory)\r\nexport class JobTest {\r\n    public jobTitle = '';\r\n    public jobDescription = '';\r\n    public email = '';\r\n    public address = '';\r\n    public dateOfBirth = '';\r\n    public controller = null;\r\n\r\n    jobTypes: IJob[] = [\r\n        { id: 1, name: \"Full Time\" },\r\n        { id: 2, name: \"Contract\" },\r\n        { id: 3, name: \"Contract-To-Hire\" }\r\n    ];\r\n    selectedJobTypeId: number = null;\r\n\r\n    jobSkills: string[] = [\r\n        \".NET\",\r\n        \"C#\",\r\n        \"Sharepoint\",\r\n        \"JavaScript\",\r\n        \"HTML\",\r\n        \"SQL Server\",\r\n        \"Microsoft Azure\",\r\n        \"XAML\",\r\n        \"Java\",\r\n        \"NodeJS\"\r\n    ];\r\n    selectedStringJobSkills: string[] = [];\r\n\r\n    states = [    \r\n        \"Alabama\",        \r\n        \"Alaska\",       \r\n        \"Arizona\",        \r\n        \"California\",       \r\n        \"Colorado\"\r\n    ];\r\n    selectedStringState: string = '';\r\n\r\n\r\n    constructor(public controllerFactory: ValidationControllerFactory) {\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        //this.controller.validateTrigger = validateTrigger.manual;\r\n    }\r\n\r\n\r\n    submit() {\r\n        this.controller.validate().then((value) => {\r\n            if (value.valid) {\r\n                alert('Form submitted!');\r\n            } else {\r\n                alert('Form not submitted!');\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nValidationRules.customRule(\r\n    'date',\r\n    (value, obj) => {\r\n        var d = new Date(value);\r\n        return value === null || value === undefined || value.trim() === ''|| !isNaN(d.getTime())\r\n    },\r\n    `\\${$displayName} must be a Date.`   \r\n);\r\n\r\nValidationRules\r\n    .ensure('jobTitle').required()\r\n    .ensure('jobDescription').required()\r\n    .ensure('email').displayName('Email Address').required().withMessage(`\\${$displayName} cannot be blank.`).email()\r\n    .ensure('dateOfBirth').required().satisfiesRule('date')\r\n    .ensure('phoneNumber').displayName('Phone Number').required().withMessage(`\\${$displayName} cannot be blank.`)        \r\n        .matches(/^[(]{0,1}[0-9]{3}[)]{0,1}[-\\s\\.]{0,1}[0-9]{3}[-\\s\\.]{0,1}[0-9]{4}$/).withMessage(`\\${$displayName} is not valid.`)\r\n    .on(JobTest); ","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging()\n    .plugin('aurelia-validation')\n    .plugin('aurelia-ux');;\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class ContactUpdated {\r\n    constructor(public contact) { }\r\n}\r\n\r\nexport class ContactViewed {\r\n    constructor(public contact) { }\r\n}","export class NoSelection {\r\n      message = \"Please Select a Contact.\";\r\n    }","export function areEqual(obj1, obj2) {\n\treturn Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && (obj1[key] === obj2[key]));\n};","let latency = 100;\nlet id = 0;\n\nfunction getId(){\n  return ++id;\n}\n\nlet contacts = [\n  {\n    id:getId(),\n    firstName:'John',\n    lastName:'Tolkien',\n    email:'tolkien@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Clive',\n    lastName:'Lewis',\n    email:'lewis@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Owen',\n    lastName:'Barfield',\n    email:'barfield@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Charles',\n    lastName:'Williams',\n    email:'williams@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Roger',\n    lastName:'Green',\n    email:'green@inklings.com',\n    phoneNumber:'867-5309'\n  }\n];\n\nexport class WebAPI {\n  isRequesting = false;\n  \n  getContactList(){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = contacts.map(x =>  { return {\n          id:x.id,\n          firstName:x.firstName,\n          lastName:x.lastName,\n          email:x.email\n        }});\n        resolve(results);\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  getContactDetails(id){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let found = contacts.filter(x => x.id == id)[0];\n        resolve(JSON.parse(JSON.stringify(found)));\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  saveContact(contact){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let instance = JSON.parse(JSON.stringify(contact));\n        let found = contacts.filter(x => x.id == contact.id)[0];\n\n        if(found){\n          let index = contacts.indexOf(found);\n          contacts[index] = instance;\n        }else{\n          instance.id = getId();\n          contacts.push(instance);\n        }\n\n        this.isRequesting = false;\n        resolve(instance);\n      }, latency);\n    });\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  config.globalResources(['./elements/loading-indicator']);\n}\n","import * as nprogress from 'nprogress';\r\nimport { bindable, noView } from 'aurelia-framework';\r\n\r\n@noView(['nprogress/nprogress.css'])\r\nexport class LoadingIndicator {\r\n    @bindable loading = false;\r\n\r\n    loadingChanged(newValue) {\r\n        if (newValue) {\r\n            nprogress.start();\r\n        } else {\r\n            nprogress.done();\r\n        }\r\n    }\r\n}"],"sourceRoot":".."}